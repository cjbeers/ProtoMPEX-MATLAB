%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [Brg,Bzg,Atg,avec,zvec]=geom_coaxial_coilsm(z0,cl,rr1,rr2,...                                     nturns,nlayers,zmax,rmax,nz,nr)%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Written by R. H. Goulding 10/3/98% This function calculates the magnetic induction (Br,Bz) due to an arbitrary% set of coaxial circular coils. It uses the exact solution for the magnetic% field produced by a circular filament and sums over filaments representing the% full coil set. This type of solution is not accurate in the immediate % neighborhood of (within a few mm for typical coil sizes) the coils, or % internal to the coils themselves, but is compact and executes quickly.% The function calls the function loop_B.m to calculate the field of a single% coil.  NOTE: All input and output variables are in MKS units (meters, Amperes,% Tesla, etc.)% Output variables:%%  Brtot  array of length (nr,nz) containing the magnitude of Br at locations %         specified by the vectors avec and zvec%%  Bztot  array of length (nr,nz) containing the magnitude of Bz at locations %         specified by the vectors avec and zvec%%  psi    array of length (nr,nz) containing the magnitude of the axial magnetic%%  avec  vector containing the radial locations at which the field quantities%        are calculated%%  zvec  vector containing the axial locations at which the field quantities are%        calculated% Input variables:%%  z0   vector containing the z (axial) starting position of each coil relative to%       the start of the magnetic field profile at z=0. The coil extends from%       this location in the direction of larger z%%  cl   vector containing axial length of each coil%%  rr1  vector containing the inner radius of each coil%  %  rr2  vector containing the outer radius of each coil%%  cur  vector containing the current magnitudes in each coil  (see note below)%%  nturns  vector containing the number of turns per coil layer in each coil (see%          note below)         %%  nlayers vector containing number of layers in each coil (see note below)%%  zmax  scalar containing the axial distance to calculate the fields over%%  rmax  scalar containing the radial distance to calculate the fields over%%  nz    scalar containing the number of axial positions at which to calculate%        the field quantities%  nr    scalar containing the number of radial positions at which to calculate%        the field quantitites%%  NOTE: The variables as described above result in a model using 1 circular%        filament per individual coil turn. This usually gives accurate results.%        If it is desired to use additional filaments per turn, this can be done by%        increasing nturns and nlayers, and decreasing cur as appropriate to %        maintain a constant current density    nc=length(z0);   % number of coilsdz_c=cl./nturns; % axial interval between filamentsda_c=(rr2-rr1)./nlayers;  %radial interval between filamentsdz=(zmax)/(nz-1); % axial interval between field calculation locationsda=rmax/(nr-1);  % radial interval between field calculation locationszvec=0:dz:zmax;  % vector containing all axial field calculation locationsavec=0:da:rmax;  % vector containing all radial field calculation locations avec(1)=1.e-6;  % set to small nonzero value to avoid div by 0 errors[z_arr,a_arr]=meshgrid(zvec,avec); % arrays containing all combinations of                                   % radial and axial field calc locationsBrg=zeros(nc*nr,nz);Bzg=Brg; % initialize variables containing calculated field quantititesAtg=Brg;%  loop through once for each coil:for ic=1:nc; % vector of all axial filament locations zvec_c=z0(ic)+dz_c(ic)/2:dz_c(ic):z0(ic)+cl(ic)-dz_c(ic)/2; % vector of all radial filament locations avec_c=rr1(ic)+da_c(ic)/2:da_c(ic):rr2(ic)-da_c(ic)/2; %  loop through once for each filament: for ixz=1:nturns(ic);  for ixa=1:nlayers(ic);%   calculate field quantities resulting from filament for all observation locations   [Brag,Bzag,Atag]=loop_geom(avec_c(ixa),zvec_c(ixz),a_arr,z_arr);%  add contribution from individual filament to total field   Brg((ic-1)*nr+1:ic*nr,:)=Brg((ic-1)*nr+1:ic*nr,:)+Brag; %radial magnetic field   Bzg((ic-1)*nr+1:ic*nr,:)=Bzg((ic-1)*nr+1:ic*nr,:)+Bzag; % axial magnetic field   Atg((ic-1)*nr+1:ic*nr,:)=Atg((ic-1)*nr+1:ic*nr,:)+Atag; % azimuthal vector potential  end endend% Done